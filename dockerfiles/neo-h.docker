# Base the image on Ubuntu 20.04 
FROM ubuntu:22.04 

# Image metadata
LABEL maintainer="alejandro@dpella.io"
LABEL version="0.2"
LABEL description="GHC for development"

# Set the timezone so apt-get doesn't ask for it later
ENV TZ=Europe/Stockholm
ENV WORKINGDIR=/root
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Copy the entrypoint script and make it the container's entrypoint
COPY ./otherfiles/entrypoint.sh /bin/entrypoint

##
# Auxiliaries files for configuration of utilities  
##

# Copy activation lines for powerfile 
COPY ./otherfiles/powerline ${WORKINGDIR}

# Two lines  
COPY ./otherfiles/default.twolines.json ${WORKINGDIR}

# FZF 
COPY ./otherfiles/fzf ${WORKINGDIR}

# Install base system utilities and dependencies
RUN apt-get update \ 
    && \
    apt-get install -y --no-install-recommends \
         software-properties-common \ 
         sudo \ 
         ssh  \
         git  \
         wget \ 
         curl \ 
         make \ 
         lzma \ 
         libnuma-dev \
         zlib1g-dev \
	 libgmp-dev \
	 libgmp10 \
         liblzma-dev \ 
	 gcc \
	 autoconf \
	 automake \
	 gpg \
         dirmngr \
	 build-essential \
       	 lsb-release \
         gnupg2  

RUN apt-get install -y powerline \ 
    && \  
    apt-get install -y less \
    && \ 
    # apt-get install -y vim \ 
    # && \
    mkdir ~/.ssh \ 
    && \
    touch ~/.ssh/known_hosts \
    && \ 
    ssh-keyscan github.com >> ~/.ssh/known_hosts \ 
    && \ 
    chmod +x /bin/entrypoint
##
# Utilities
## 

# Trash can 
RUN apt-get install -y trash-cli 
 
# TL;DR
RUN apt-get install --yes tldr

# Batcat (improved cat)
RUN apt-get install --yes bat

# Weather in ASCII :)
RUN echo "weather() { curl wttr.in/$@; }" >> ${WORKINGDIR}/.bashrc

# Activate powerline 
RUN cat ${WORKINGDIR}/powerline >> ${WORKINGDIR}/.bashrc && rm ${WORKINGDIR}/powerline 

# Activate two lines powerline 
RUN mv ${WORKINGDIR}/default.twolines.json /usr/share/powerline/config_files/themes/shell
RUN sed -i 's/default_leftonly/default.twolines/g' /usr/share/powerline/config_files/config.json

RUN echo "alias less=batcat" >> ${WORKINGDIR}/.bashrc 
RUN echo 'eval $(ssh-agent)' >> ${WORKINGDIR}/.bashrc

# Installing yes 
RUN apt-get install coreutils 

# Fuzzy find filer
# RUN apt-get install --yes fzf
RUN git clone --depth 1 https://github.com/junegunn/fzf.git ${WORKINGDIR}/.fzf

WORKDIR ${WORKINGDIR}/.fzf

RUN ./install --all  

RUN cat ${WORKINGDIR}/fzf >> ${WORKINGDIR}/.bashrc && rm ${WORKINGDIR}/fzf 

WORKDIR ${WORKINGDIR}

## 
# NEO Vim 
##
RUN curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
RUN rm -rf /opt/nvim
RUN tar -C /opt -xzf nvim-linux64.tar.gz
RUN rm ${WORKINGDIR}/nvim-linux64.tar.gz
RUN echo 'export PATH="$PATH:/opt/nvim-linux64/bin"' >> ${WORKINGDIR}/.bashrc

# NVChad (IDE based on NeoVIM) 
RUN git clone https://github.com/NvChad/starter ${WORKINGDIR}/.config/nvim

## 
# Haskell
## 
RUN curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh

# Add ghcup to the PATH
ENV PATH="${WORKINGDIR}/.ghcup/bin:$PATH"

RUN ghcup install ghc 9.6.4
RUN ghcup set ghc 9.6.4

# Install cabal
RUN ghcup install cabal 3.10.1.0
RUN ghcup set cabal 3.10.1.0

# Install Haskell Language Server
RUN ghcup install hls

# Set the installed version of hls as the default
RUN ghcup set hls

# LuaRocks (needed for Haskell tools) 
RUN apt-get install -y lua5.4 
RUN apt-get install -y lua5.4-dev 
RUN apt-get install -y unzip 
RUN wget https://luarocks.org/releases/luarocks-3.11.0.tar.gz
RUN tar zxpf luarocks-3.11.0.tar.gz
 
WORKDIR luarocks-3.11.0

RUN ./configure && make && make install
RUN luarocks install luasocket

WORKDIR ${WORKINGDIR}

RUN rm -r luarocks-3.11.0.tar.gz luarocks-3.11.0

# Installing Haskell tools for Neo Vim
RUN luarocks install haskell-tools.nvim

# Hoogle for Haskell tools
RUN cabal install hoogle

ENV PATH=$PATH:${WORKINGDIR}/.cabal/bin

RUN hoogle generate

# Fast-tag for Haskell files 
RUN cabal install fast-tags 

# Locale 
RUN apt install locales
RUN locale-gen en_US.UTF-8
RUN update-locale
ENV LANG=en_US.UTF-8

# Tree-sitter (parsers)
RUN apt-get install -y cargo
RUN cargo install tree-sitter-cli
ENV PATH="${WORKINGDIR}/.cargo/bin:$PATH"

RUN apt-get install -y nodejs

# For telescope (nvim) to grep in all the files
RUN apt-get install ripgrep

# Formatting Haskell
# RUN cabal install ormolu

COPY ./otherfiles/init.lua    ${WORKINGDIR}/.config/nvim/lua/plugins/
COPY ./otherfiles/options.lua ${WORKINGDIR}/.config/nvim/lua/

ENTRYPOINT [ "/bin/entrypoint" ]
